{
	"info": {
		"_postman_id": "a10b9455-5718-4853-bc89-477ef3c1527a",
		"name": "TAPS_testy",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "/posts endpoint tests",
			"item": [
				{
					"name": "get all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									" \r",
									"pm.test('Number of records returned = ' + data.length, function () {\r",
									"    pm.expect(data.length).to.equal(100);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/posts"
					},
					"response": []
				},
				{
					"name": "get one posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									" \r",
									"pm.test('Number of records returned = ' + data.length, function () {\r",
									"    pm.expect(data.length).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for userId number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for title value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"eum et est occaecati\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ullam et saepe reiciendis voluptatem\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/posts/{{postId}}"
					},
					"response": []
				},
				{
					"name": "put posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Test for userId number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for title value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"new test title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"new test body\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": 4,\r\n    \"title\": \"new test title\",\r\n    \"body\": \"new test body\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/posts/{{postId}}"
					},
					"response": []
				},
				{
					"name": "post posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Test for userId number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userId).to.eql(10);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for title value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"title for post 101\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"body for post 101\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 10,\r\n    \"id\": 101,\r\n    \"title\": \"title for post 101\",\r\n    \"body\": \"body for post 101\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/posts"
					},
					"response": []
				},
				{
					"name": "delete posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/posts/{{postId}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "/comments endpoint tests",
			"item": [
				{
					"name": "get all comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									" \r",
									"pm.test('Number of records returned = ' + data.length, function () {\r",
									"    pm.expect(data.length).to.equal(500);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/comments"
					},
					"response": []
				},
				{
					"name": "get some comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									" \r",
									"pm.test('Number of records returned = ' + data.length, function () {\r",
									"    pm.expect(data.length).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for postId number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for name value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"id labore ex et quam laborum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Test for email value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql(\"Eliseo@gardner.biz\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"laudantium enim quasi est quidem magnam\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/comments/{{commentId}}"
					},
					"response": []
				},
				{
					"name": "get some comments by postId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									" \r",
									"pm.test('Number of records returned = ' + data.length, function () {\r",
									"    pm.expect(data.length).to.equal(5);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for postId number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for Id numbers\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.oneOf(['11','12','13','14','15']);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/comments/?postId=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"comments",
								""
							],
							"query": [
								{
									"key": "postId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "put comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Test for postId number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(2);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Test for name value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Julia\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Test for email value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql(\"Julia@test.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"new text\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"postId\":2,\r\n    \"name\": \"Julia\",\r\n    \"email\": \"Julia@test.com\",\r\n    \"body\": \"new text\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/comments/{{commentId}}"
					},
					"response": []
				},
				{
					"name": "post comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Test for Id number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(501);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for postId value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(5);\r",
									"});\r",
									"\r",
									"pm.test(\"Test for name value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Julia\");\r",
									"});\r",
									"\r",
									"pm.test(\"Test for email value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql(\"Julia@test.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"new text\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 501,\r\n    \"postId\": 5,\r\n    \"name\": \"Julia\",\r\n    \"email\": \"Julia@test.com\",\r\n    \"body\": \"new text\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/comments"
					},
					"response": []
				},
				{
					"name": "delete comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/comments/{{commentId}}"
					},
					"response": []
				}
			]
		}
	]
}